import os
import ssl
import random
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression

intents = {"tag": "greeting",
        "patterns": ["Hi", "Hello", "Hey", "How are you", "What's up"],
        "responses": ["Hi there", "Hello", "Hey", "I'm fine, thank you", "Nothing much"]}, {"tag": "goodbye",
        "patterns": ["Bye", "See you later", "Goodbye", "Take care"],
        "responses": ["Goodbye", "See you later", "Take care"]}

# Create the vectorizer and classifier

vectorizer = TfidfVectorizer()
clf = LogisticRegression(random_state=0, max_iter=10000)

# Preprocess the data
tags = []
patterns = []
for intent in intents:
    for pattern in intent['patterns']:
        tags.append(intent['tag'])
        patterns.append(pattern)

# training the model
x = vectorizer.fit_transform(patterns)
y = tags
clf.fit(x, y)

# Predict Intent
def predict_intent(input_text):
    X_test = vectorizer.transform([input_text])
    return clf.predict(X_test)[0]

# Generate Response
def generate_response(input_text):
    intent = predict_intent(input_text)
    for intent_data in intents:
        if intent_data["tag"] == intent:
            return random.choice(intent_data["responses"])

# Test the chatbot
user_input = "Hi"
response = generate_response(user_input)
print(response)